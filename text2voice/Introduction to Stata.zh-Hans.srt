1
00:00:05,120 --> 00:00:14,960
我计划用10分钟的时间演示一下stata软件如何使用

2
00:00:12,559 --> 00:00:17,199
我假设您已经购买了 stata 许可证

3
00:00:14,960 --> 00:00:20,960
下载了软件并且已经安装好

4
00:00:20,080 --> 00:00:27,760
准备好开始学习stata

5
00:00:24,320 --> 00:00:31,840
然后你需要下载我已经写好的程序文件

6
00:00:31,840 --> 00:00:39,200
然后双击打开它

7
00:00:35,360 --> 00:00:45,360
或者你先打开stata,然后在菜单中选择文件打开

8
00:00:42,640 --> 00:00:53,039
学习stata最简单的方法就是从一个现有的程序开始

9
00:00:50,239 --> 00:00:58,399
这个程序被称为 0 Introduction to stata 点 do

10
00:00:54,879 --> 00:01:07,920
文件后缀是do,他是stata 程序的扩展名

11
00:01:04,799 --> 00:01:11,760
某些用户可能看不到文件后缀名,因为系统会默认隐藏后缀名

12
00:01:08,560 --> 00:01:20,080
这里是我们所谓的输出窗口,这里的内容都是程序运行时输出的

13
00:01:16,479 --> 00:01:30,799
如果您单击 此处的执行按钮，下面的代码就会运行

14
00:01:28,640 --> 00:01:36,320
输出窗口就会显示程序运行的结果

15
00:01:34,000 --> 00:01:41,360
今天在这个视频中,我们将讨论以下内容

16
00:01:38,320 --> 00:01:50,000
如何设置我们拥有的数据集,如何编辑数据以及如何做一些统计分析,最后是导出输出结果到表格中

17
00:01:49,119 --> 00:01:56,240
最后生成一个日志文件用来保持所有的输出结果

18
00:01:53,360 --> 00:02:10,959
我今天将使用的数据集 wage1.dta, dta是 数据文件的扩展名

19
00:02:07,280 --> 00:02:15,760
do是程序文件的扩展名, introduction to stata dot do就是程序

20
00:02:14,800 --> 00:02:24,239
数据文件用dta 扩展名所以是 wage1.dta

21
00:02:20,879 --> 00:02:32,319
所以首先要做的是从网站上下载数据,视频下面有下载链接

22
00:02:28,239 --> 00:02:36,319
然后将其存储在计算机上的某个位置，

23
00:02:32,319 --> 00:02:43,280
对我而言，此数据位于我的c盘的这个文件夹中

24
00:02:40,080 --> 00:02:56,959
您需要在程序中更改此部分为你自己的数据路径,以便于顺利运行这个代码

25
00:02:56,959 --> 00:03:08,159
我已经设置了一个全局目录,后面会用到这个目录

26
00:03:05,680 --> 00:03:10,400
我所有的数据集都是来自这个文件夹

27
00:03:08,159 --> 00:03:19,200
我可以从这个文件夹中调用它们 ，所以稍后当我想使用 数据集时，

28
00:03:15,760 --> 00:03:31,280
我将使用 use 命令 ，然后这里是数据目录 斜杠 wage1

29
00:03:26,640 --> 00:03:33,920
调用这个文件wage1.dta

30
00:03:31,280 --> 00:03:39,040
后面的逗号clear意味着如果内存中有任何其他数据

31
00:03:37,360 --> 00:03:45,920
它将被清除并用这个文件覆盖，你也可以使用CD命令来完成相同的事情

32
00:03:43,760 --> 00:03:55,040
把global datadir 改为 CD,  使用这个目录

33
00:03:52,959 --> 00:04:02,480
可以简单地调用它，只需输入use wage1，这样就可以 完成同样的事情，

34
00:04:00,480 --> 00:04:05,920
但是我在这里使用global语句来设置数据目录

35
00:04:04,560 --> 00:04:14,799
这里还有几件事要 提到，其中一个是 clear all

36
00:04:12,640 --> 00:04:16,720
这会清除当前内存中的所有内容，

37
00:04:16,720 --> 00:04:23,919
以便程序可以通过点击这里, 多次重新运行

38
00:04:20,079 --> 00:04:32,320
并设置set more off 在程序执行时关闭more

39
00:04:32,320 --> 00:04:42,720
所以我们在这里做的另一件事 是创建一个日志文件来保存输出，

40
00:04:38,960 --> 00:04:45,280
我们如何做到这一点?

41
00:04:42,720 --> 00:04:51,919
是通过log using 我们给它一个名字 log file 逗号 replace

42
00:04:51,919 --> 00:05:01,600
意思是, 如果文件存在, 我们将覆盖这个文件

43
00:04:59,440 --> 00:05:04,800
这个很有用，因为当我们 运行程序时

44
00:05:02,800 --> 00:05:08,080
，我们所有的结果都将 存储在日志文件中

45
00:05:07,199 --> 00:05:19,199
因此 在输出窗口中看到的任何内容都将存储在此日志文件中， 我们以后可以阅读

46
00:05:16,000 --> 00:05:23,759
基本上所有结果都可以存储，

47
00:05:19,199 --> 00:05:32,160
以上是如何设置数据, 现在让我们继续探索数据

48
00:05:30,160 --> 00:05:39,840
所以我们要做的第一 件事是 描述数据

49
00:05:41,680 --> 00:05:48,160
所以在输出窗口中 , 我们先回顾一下

50
00:05:45,759 --> 00:05:55,600
这是开始创建的日志文件 它是说这是日志的目录, 文件将被存储在这里

51
00:05:53,680 --> 00:06:00,479
这是文件的名称 它是文件的扩展名

52
00:05:57,919 --> 00:06:07,840
嗯，基本上每次运行一个文件时, 我们在输出中看到已经完成了什么，

53
00:06:04,479 --> 00:06:09,199
因此如果我们执行describe，我们就是要做描述统计

54
00:06:12,880 --> 00:06:19,680
我们将要看到的这些是数据集中的所有变量，所以这里我们有

55
00:06:18,639 --> 00:06:26,240
变量名称,还有 这些变量的标签

56
00:06:23,840 --> 00:06:31,039
特别是这个数据集没有很好的设置标签，所以

57
00:06:28,720 --> 00:06:31,919
变量名和标签其实是一样的,

58
00:06:31,039 --> 00:06:44,160
通常这里可以具体描述变量的信息, 例如单位是什么 美元还是人民币 是时薪还是日薪

59
00:06:40,800 --> 00:06:46,319
教育，以年数衡量

60
00:06:44,160 --> 00:06:51,440
所以像这样的标签才是有用的

61
00:06:48,639 --> 00:06:57,360
如果我们不想要查看所有变量

62
00:06:53,759 --> 00:07:02,160
我们实际上可以只写一些感兴趣的变量，在这里

63
00:06:59,919 --> 00:07:05,599
比如只描述工资教育和经验

64
00:07:05,599 --> 00:07:13,199
现在所看到的，结果更简洁了

65
00:07:13,440 --> 00:07:22,080
如果我们想列出并查看数据的前几行观察结果

66
00:07:30,160 --> 00:07:38,080
一斜杠十表示 从第一到第十行数据

67
00:07:36,319 --> 00:07:40,880
，这是从第1到第十

68
00:07:38,080 --> 00:07:44,400
这里我们有工资教育和经验，

69
00:07:42,400 --> 00:07:46,080
所以这是第一个样本

70
00:07:44,400 --> 00:07:46,960
这是第二个，这是第三个

71
00:07:46,960 --> 00:07:51,599
如果我们想看看数据在哪里

72
00:07:49,280 --> 00:07:53,520
实际上可以点击数据编辑器

73
00:07:51,599 --> 00:07:59,199
我们就可以像这样查看数据

74
00:07:55,360 --> 00:08:02,400
但是我们也可以在输出窗口中列出它

75
00:08:02,400 --> 00:08:09,840
所以接下来就是汇总统计数据

76
00:08:06,560 --> 00:08:14,400
在这里我们使用summarize获得所有变量的汇总统计信息

77
00:08:14,400 --> 00:08:24,720
然后我们也可以只统计几个变量

78
00:08:21,840 --> 00:08:26,720
所以这里summarize统计了所有变量

79
00:08:24,720 --> 00:08:28,319
所以我们看到的就是所有变量的统计信息

80
00:08:26,720 --> 00:08:31,919
这是计数统计

81
00:08:28,319 --> 00:08:35,120
然后是平均值 标准差 最小值和最大值，

82
00:08:31,919 --> 00:08:37,919
如果设置了变量

83
00:08:35,120 --> 00:08:38,800
我们感兴趣的这三个变量

84
00:08:38,800 --> 00:08:48,399
um，我们将要得到这三个变量的平均值 标准差 最小值和最大值

85
00:08:45,760 --> 00:08:50,080
我们实际上这些可以在论文中汇报的

86
00:08:50,080 --> 00:08:54,640
如果我们想要更多统计信息

87
00:08:52,640 --> 00:08:57,200
关于特定变量的信息，

88
00:08:54,640 --> 00:09:03,519
我们可以使用summarize，然后 输入变量工资 逗号 detail

89
00:08:59,920 --> 00:09:07,519
，这里有很多更详细的统计数据，

90
00:09:03,519 --> 00:09:11,200
所以我们有平均值标准差

91
00:09:07,519 --> 00:09:16,720
我们也有第1到 99 个百分位数

92
00:09:14,080 --> 00:09:19,440
也有最小值和最大值，

93
00:09:16,720 --> 00:09:26,560
所以我们在这里看到了特定变量的更多细节

94
00:09:27,760 --> 00:09:33,920
如果我们使用tabulate，我们还可以按组提供汇总统计信息

95
00:09:30,800 --> 00:09:37,040
变量female的统计信息在这里

96
00:09:33,920 --> 00:09:43,839
female这个变量等于1的有252个样本

97
00:09:40,200 --> 00:09:48,000
female这个变量等于0的有274个样本

98
00:09:47,279 --> 00:09:52,000
前面是频率,后面是百分比

99
00:09:52,000 --> 00:09:58,399
这里是总数，现在我们还可以分组汇总数据

100
00:10:01,680 --> 00:10:14,240
summarize wage if female=1

101
00:10:12,320 --> 00:10:21,839
这里意思是统计女性的工资

102
00:10:18,399 --> 00:10:28,160
或者如果我们想分别总结男性和女性的工资，

103
00:10:25,360 --> 00:10:28,640
我们将如何做到这一点

104
00:10:28,640 --> 00:10:34,399
使用命令, by sort female: summarize wage

105
00:10:32,160 --> 00:10:39,200
按变量female对数据进行排序，然后汇总工资的结果

106
00:10:36,320 --> 00:10:45,360
所以这个命令 的输出按照female分组后的统计

107
00:10:43,040 --> 00:10:46,880
female等于零，就是男性

108
00:10:46,880 --> 00:10:58,959
汇总男性的工资，如果female等于一，所以这就是女性 平均工资

109
00:10:55,519 --> 00:11:02,640
，我们现在可以做的下一件事

110
00:10:58,959 --> 00:11:09,920
是编辑数据，以便我们可以保留 或删除变量

111
00:11:05,920 --> 00:11:12,800
所以我们可以使用命令keep

112
00:11:09,920 --> 00:11:19,279
这些是将保留在这里的所有变量，因此其余的变量会被删除

113
00:11:22,640 --> 00:11:32,240
也许我们可以删除一个特定的变量，例如这个

114
00:11:30,079 --> 00:11:36,399
在前面保留了它 但是现在我们要删除它

115
00:11:36,399 --> 00:11:42,800
如果我们不再需要它

116
00:11:39,760 --> 00:11:45,920
，我们也可以删除一个特定的变量，所以我们可以做的另一件事是

117
00:11:42,800 --> 00:11:50,480
如果工资小于 2 则删除它。

118
00:11:45,920 --> 00:11:53,760
所以如果我们有想要根据变量的取值来删除数据

119
00:11:53,760 --> 00:11:57,680
我们可以使用drop if

120
00:11:57,680 --> 00:12:06,240
此处的保留和删除指的是变量本身或数据中的列，

121
00:12:03,680 --> 00:12:14,000
使用drop if后, 实际上会删除工资小于 2的观测样本

122
00:12:10,639 --> 00:12:20,240
因此它将删除数据中的某些行

123
00:12:18,639 --> 00:12:23,519
我们可以做的下一件事是

124
00:12:20,240 --> 00:12:25,760
我们可以给变量添加标签

125
00:12:23,519 --> 00:12:31,040
因为这个数据集没有很好的标签

126
00:12:27,760 --> 00:12:33,440
所以我们可以给变量设置label

127
00:12:31,040 --> 00:12:35,920
然后是变量的名称

128
00:12:33,440 --> 00:12:36,880
然后是我们想要设置的标签

129
00:12:35,920 --> 00:12:42,240
在这里我们可以将 每小时工资以美元表示，你现在看到，

130
00:12:40,639 --> 00:12:48,880
当我们使用describe wage时，我们可以在这里看到工资，

131
00:12:46,000 --> 00:12:49,680
然后这是工资的标签

132
00:12:49,680 --> 00:13:05,120
使用stata的dta文件的好处是, 可以像excel 文件一样存储变量名和数据

133
00:13:01,920 --> 00:13:11,200
而且它还有其他有用的信息，例如变量标签

134
00:13:09,200 --> 00:13:14,560
我们可以在这里做的下一件事是,我们可以生成新变量

135
00:13:13,680 --> 00:13:29,519
使用命令generate, 或它的简写gen,在这里我们可以生成变量logwage 将等于 wage的对数

136
00:13:26,880 --> 00:13:36,240
我们还可以生成教育平方 等于educ的 2 次方

137
00:13:33,200 --> 00:13:45,680
我们可以通过多个变量的表达式求新变量

138
00:13:50,720 --> 00:13:58,000
我们在这里要做的最后一件事是做回归分析,然后把结果输出到word

139
00:13:57,199 --> 00:14:06,240
有时这一点很有用，尤其是你自己需要整理表格的时候

140
00:14:02,959 --> 00:14:09,279
注意这里

141
00:14:06,240 --> 00:14:19,440
我在它们前面放了一个星，所以前面有星的任何行都会被注释掉， 所以 stata 不会读取它，

142
00:14:16,320 --> 00:14:28,880
所以在这里我们需要只做 一次， 这意味着安装 outreg2 包

143
00:14:25,600 --> 00:14:41,279
如果我们在这里删除这些命令前面的星号， 我们将安装这个 outreg 2 包，所以实际上我们需要运行这一次

144
00:14:39,519 --> 00:14:44,560
在这里删除星号

145
00:14:41,279 --> 00:14:48,079
执行这一行一次

146
00:14:52,639 --> 00:15:03,440
稍后我们可以调用它以便于我们可以生成一个漂亮的表

147
00:15:01,440 --> 00:15:10,160
要把星放回这里， 因为我已经安装在我的电脑上

148
00:15:10,160 --> 00:15:18,639
那么我们将做第一件事是,让我们估计一个简单的回归模型，

149
00:15:16,000 --> 00:15:31,519
我们使用 reg 或 regress，这里的工资是因变量, 教育是自变量

150
00:15:27,199 --> 00:15:38,959
因此reg wage educ 运行就可以看到结果

151
00:15:35,600 --> 00:15:45,120
在这里我们有工资 因变量教育 还有自变量

152
00:15:45,120 --> 00:15:57,279
我们这里的系数，意味着教育增加一年,工资将增加 53 美分，

153
00:15:53,839 --> 00:16:04,560
该表中还有很多额外的统计数据， 我们将在稍后讨论，

154
00:16:02,399 --> 00:16:12,800
但现在我们只对如何导出这个表格感兴趣 将如何执行此操作呢

155
00:16:09,839 --> 00:16:14,959
我们将调用这个 outrigger2 包

156
00:16:12,800 --> 00:16:25,279
然后我们会说 using ,后面写上文件名,姑且称它为称为regtable.doc

157
00:16:22,959 --> 00:16:32,959
replace意思是,如果我们有同名文件存在我们将实际覆盖这个文件

158
00:16:36,160 --> 00:16:42,800
接下来要做的是 估计多元回归模型

159
00:16:41,839 --> 00:16:51,360
所以 现在除了教育这个变量之外我们还有其他变量

160
00:16:48,000 --> 00:16:58,959
wage是因变量 教育和经验它们是自变量

161
00:16:56,800 --> 00:17:04,480
这些是我们从这个模型中得到的系数

162
00:17:01,040 --> 00:17:11,919
让我们也将这些结果导出到表格中，所以我们使用 outreg2

163
00:17:08,240 --> 00:17:22,319
使用相同的文件，如果我们在这里放置逗号append,结果会追加到我们之前的文件，

164
00:17:19,520 --> 00:17:31,600
以上这些帮助我们生成很好的表，方便以后使用

165
00:17:28,400 --> 00:17:39,280
最后一件事我们别忘记 log close

166
00:17:37,440 --> 00:17:43,280
你记得我们之前打开了日志文件 ，现在我们正在关闭它

167
00:17:43,280 --> 00:17:52,720
在这个输出窗口中看到的所有内容都保存在这个日志文件中

168
00:17:50,640 --> 00:18:05,679
你可以找到这个日志文件的路径, 可以据此找到日志文件

169
00:18:01,679 --> 00:18:11,840
并且您基本上可以在此处保存所有这些回归输出

170
00:18:08,960 --> 00:18:14,640
这是一个非常快速的介绍 stata的视频

171
00:18:12,640 --> 00:18:23,200
非常感谢您的观看，

172
00:18:14,640 --> 00:18:23,200
我是Data Sense, 麻烦您帮忙点赞

